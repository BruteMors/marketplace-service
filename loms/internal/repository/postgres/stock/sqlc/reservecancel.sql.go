// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: reservecancel.sql

package sqlc

import (
	"context"
)

const reserveCancel = `-- name: ReserveCancel :exec
WITH unnested_data AS (
  SELECT unnest($1::int[]) AS sku, unnest($2::int[]) AS count
)
UPDATE items
SET reserved = GREATEST(reserved - unnested_data.count, 0)
FROM unnested_data
WHERE items.sku = unnested_data.sku
`

type ReserveCancelParams struct {
	Sku   []int32
	Count []int32
}

func (q *Queries) ReserveCancel(ctx context.Context, arg ReserveCancelParams) error {
	_, err := q.db.Exec(ctx, reserveCancel, arg.Sku, arg.Count)
	return err
}
