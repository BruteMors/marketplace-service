// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: fetchnextorderstatus.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const fetchNextOrderStatusChangedEvent = `-- name: FetchNextOrderStatusChangedEvent :one
SELECT id, order_id, status, at
FROM order_status_changed_events
WHERE sent = FALSE
ORDER BY at ASC
LIMIT 1
`

type FetchNextOrderStatusChangedEventRow struct {
	ID      int64
	OrderID int64
	Status  OrderStatus
	At      pgtype.Timestamp
}

func (q *Queries) FetchNextOrderStatusChangedEvent(ctx context.Context) (FetchNextOrderStatusChangedEventRow, error) {
	row := q.db.QueryRow(ctx, fetchNextOrderStatusChangedEvent)
	var i FetchNextOrderStatusChangedEventRow
	err := row.Scan(
		&i.ID,
		&i.OrderID,
		&i.Status,
		&i.At,
	)
	return i, err
}
