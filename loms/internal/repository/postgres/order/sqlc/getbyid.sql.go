// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: getbyid.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getByID = `-- name: GetByID :one
SELECT
  o.order_id AS id,
  o.status,
  o.user_id AS user_id,
  o.created_at,
  o.updated_at,
  array_agg(i.item_sku)::int[] AS skus,
  array_agg(i.count)::int[] AS counts
FROM orders o
       JOIN orders_to_items i ON o.order_id = i.order_id
WHERE o.order_id = $1
GROUP BY o.order_id
`

type GetByIDRow struct {
	ID        int64
	Status    OrderStatus
	UserID    int32
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
	Skus      []int32
	Counts    []int32
}

func (q *Queries) GetByID(ctx context.Context, orderID int64) (GetByIDRow, error) {
	row := q.db.QueryRow(ctx, getByID, orderID)
	var i GetByIDRow
	err := row.Scan(
		&i.ID,
		&i.Status,
		&i.UserID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Skus,
		&i.Counts,
	)
	return i, err
}
